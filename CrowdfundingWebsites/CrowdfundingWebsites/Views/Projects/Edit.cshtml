@model CrowdfundingWebsites.Models.ViewModels.ProjectVm
@*@using CrowdfundingWebsites.Models.ViewModels;*@

@{
    ViewBag.Title = "編輯專案";
    //List<CategoryVm> categories = ViewBag.categories;
}

<h2>編輯專案</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Image)
    @*@Html.HiddenFor(model => model.StartTime)
    @Html.HiddenFor(model => model.EndTime)*@
    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.CategoryId)
        <div class="mb-3">
            @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "form-label col-md-2" })
            @*@Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-select" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })*@
            @Html.EditorFor(model => model.CategoryName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })

        </div>

        <div class="mb-3">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "form-label col-md-2" })

            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

        </div>

        <div class="mb-3">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "form-label col-md-2" })
            <div style="width: 100%; display: inline-block;">
                <!-- 使用內嵌樣式來設定寬度自動調整 -->
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = 4 }) <!-- rows 可以指定文本框的初始行數 -->
            </div>
            @*@Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })

        </div>

    <div class="row">
        <div class="col-md-6 mb-3">
            @Html.LabelFor(model => model.Goal, htmlAttributes: new { @class = "form-label col-md-2" })

            @Html.EditorFor(model => model.Goal, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Goal, "", new { @class = "text-danger" })

        </div>

        <div class="col-md-6 mb-3">
            @Html.LabelFor(model => model.ShippingDays, htmlAttributes: new { @class = "form-label col-md-2" })

            @Html.EditorFor(model => model.ShippingDays, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ShippingDays, "", new { @class = "text-danger" })

        </div>

    </div>
    <div class="row">
        <div class="col-md-6 mb-3">
            @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "form-label col-md-2" })
            @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control", type = "date" } })
            @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })

        </div>

        <div class="col-md-6 mb-3">
            @Html.LabelFor(model => model.EndTime, htmlAttributes: new { @class = "form-label col-md-2" })
            @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control", type = "date" } })
            @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })

        </div>
    </div>

        <div class="mb-3">
            <div class="text-end">
                <input type="submit" value="儲存" class="btn btn-primary" />
                @Html.ActionLink("回到專案列表", "Index", null, new { @class = "btn btn-success" })
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
