@model CrowdfundingWebsites.Models.ViewModels.ProjectVm
@*@using CrowdfundingWebsites.Models.ViewModels;*@

@{
    ViewBag.Title = "新增專案";
    //List<CategoryVm> categories = ViewBag.categories;

}

<div style="height:inherit; display:inline-block; ">
    <h2>新增專案</h2>

    @using (Html.BeginForm("Create", "Projects", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()


        <div class="form-horizontal">

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="mb-3">
                @Html.LabelFor(model => model.CategoryId, "類別", htmlAttributes: new { @class = "form-label col-md-2" })
                @Html.DropDownList("CategoryId", null, "--請選擇--", htmlAttributes: new { @class = "form-select" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })

            </div>

            <div class="mb-3">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "form-label col-md-2" })

                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

            </div>

            <div class="mb-3">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "form-label col-md-2" })
                <div style="width: 100%; display: inline-block;">
                    <!-- 使用內嵌樣式來設定寬度自動調整 -->
                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = 4 }) <!-- rows 可以指定文本框的初始行數 -->
                </div>
                @*@Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })

            </div>


            <div class="mb-3">
                <label for="formFile" class="form-label">圖片</label>
                <input class="form-control" type="file" name="myfile" id="myfile">
                @*<span class="field-validation-valid text-danger" data-valmsg-for="myfile" data-valmsg-replace="true"></span>*@
                @Html.ValidationMessage("myfile", "", new { @class = "text-danger" })
            </div>
            <div class="row">
                <div class="col-md-6 mb-3">
                    @Html.LabelFor(model => model.Goal, htmlAttributes: new { @class = "form-label col-md-2" })

                    @Html.EditorFor(model => model.Goal, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Goal, "", new { @class = "text-danger" })

                </div>

                <div class="col-md-6 mb-3">
                    @Html.LabelFor(model => model.ShippingDays, htmlAttributes: new { @class = "form-label col-md-2" })

                    @Html.EditorFor(model => model.ShippingDays, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ShippingDays, "", new { @class = "text-danger" })

                </div>

            </div>
            <div class="row">
                <div class="col-md-6 mb-3">
                    @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "form-label col-md-2" })
                    @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                    @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })

                </div>

                <div class="col-md-6 mb-3">
                    @Html.LabelFor(model => model.EndTime, htmlAttributes: new { @class = "form-label col-md-2" })
                    @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                    @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })

                </div>
            </div>



            <div class="mb-3">
                <div class="text-end">
                    <input type="submit" value="送出審查" class="btn btn-primary" />
                    @Html.ActionLink("回到專案列表", "Index", null, new { @class = "btn btn-success" })
                </div>
            </div>
        </div>

    }
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @*<script src="~/js/Tabs.js"></script>*@
}
