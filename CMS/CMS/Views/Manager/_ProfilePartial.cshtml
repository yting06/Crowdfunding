@model CrowdfundingWebsites.Models.ViewModels.ManagerProfileVm

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "managerFormId" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal container row p-3">
        <h4>修改個人資料</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)


        <div class="col-2"></div>

        <div class="col-6 container mt-4">

            <div class="row mb-3">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "col-form-label col-md-2 text-end" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "col-form-label col-md-1 text-end" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row mb-3">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "col-form-label col-md-2 text-end" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row mb-3">
                @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "col-form-label col-md-2 text-end" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="d-grid gap-2 d-md-flex justify-content-md-end">

                <button id="editUser" type="button" class="btn btn-primary">儲存</button>
            </div>

        </div>

        <div class="col-2"></div>

    </div>
}

<script>
    $(document).ready(function () {
        $("button#editUser").on('click', function () {
            let updateUrl = `/api/DataApi/UpdateManager`;
            var formData = formHelper.getFormData("managerFormId");
            debugger
            $.ajax({
                url: updateUrl,
                type: 'POST',
                data: formData,
                success(result) {
                    var isSuccess = result.success || result.IsSuccess;
                    if (!isSuccess) {
                        var oError = getErrorObject(result);
                        formHelper.setErrorMessage(key, oError);
                    } else {
                        alert("更新成功");
                    }
                }
            });

        });
    });
</script>
